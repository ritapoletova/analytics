# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IuUXRyTXlUtvIaZ5E_IUioZjJWcpFM5P
"""

import pandas as pd
import numpy as np
from sklearn.tree import DecisionTreeClassifier
train = pd.read_csv ('train.csv')
train.drop(['Artist Name','Track Name','instrumentalness','Popularity','key'], axis=1, inplace=True) #тк в последних 3 столбцах содержатся пустые значения, функция dropna() не удаляет их
train.dropna()

y=train['Class'].astype('int')
x = train.drop('Class',axis=1)
from sklearn.model_selection import train_test_split, cross_val_score
x_train, x_valid, y_train, y_valid = train_test_split(x,y,test_size=0.3,random_state=17)

first_tree = DecisionTreeClassifier(random_state=17)
np.mean(cross_val_score(first_tree,x_train,y_train,cv=5))

#настраиваем max_depth
from sklearn.model_selection import GridSearchCV
tree_params = {'max_depth': np.arange(1,11)}
tree_grid=GridSearchCV(first_tree,tree_params, cv=5, n_jobs=-1)
tree_grid.fit(x_train,y_train)
tree_grid.best_score_, tree_grid.best_params_

tree_valid_pred=tree_grid.predict(x_valid)
from sklearn.metrics import accuracy_score, precision_score
accuracy_score(y_valid,tree_valid_pred)
precision_score(y_valid,tree_valid_pred,average='micro')